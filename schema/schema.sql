
SET statement_timeout = 0;
SET lock_timeout = 0;
SET idle_in_transaction_session_timeout = 0;
SET client_encoding = 'UTF8';
SET standard_conforming_strings = on;
SELECT pg_catalog.set_config('search_path', '', false);
SET check_function_bodies = false;
SET xmloption = content;
SET client_min_messages = warning;
SET row_security = off;

CREATE EXTENSION IF NOT EXISTS "pgsodium" WITH SCHEMA "pgsodium";

CREATE EXTENSION IF NOT EXISTS "pg_graphql" WITH SCHEMA "graphql";

CREATE EXTENSION IF NOT EXISTS "pg_stat_statements" WITH SCHEMA "extensions";

CREATE EXTENSION IF NOT EXISTS "pgcrypto" WITH SCHEMA "extensions";

CREATE EXTENSION IF NOT EXISTS "pgjwt" WITH SCHEMA "extensions";

CREATE EXTENSION IF NOT EXISTS "supabase_vault" WITH SCHEMA "vault";

CREATE EXTENSION IF NOT EXISTS "uuid-ossp" WITH SCHEMA "extensions";

SET default_tablespace = '';

SET default_table_access_method = "heap";

CREATE TABLE "public"."assessment" (
    "id" bigint NOT NULL,
    "created_at" timestamp with time zone DEFAULT "now"(),
    "code" "text",
    "joined" timestamp without time zone,
    "status" smallint,
    "language" "text",
    "finished" timestamp without time zone,
    "challenge_id" "uuid",
    "exam_id" "uuid",
    "candidate_id" "uuid",
    "result" "json"
);

ALTER TABLE "public"."assessment" OWNER TO "postgres";

ALTER TABLE "public"."assessment" ALTER COLUMN "id" ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME "public"."assessment_id_seq"
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);

CREATE TABLE "public"."candidate" (
    "name" "text",
    "created_at" timestamp with time zone DEFAULT "now"(),
    "emailId" "text",
    "token" "text",
    "id" "uuid" DEFAULT "gen_random_uuid"() NOT NULL
);

ALTER TABLE "public"."candidate" OWNER TO "postgres";

CREATE TABLE "public"."challenge" (
    "difficulty" smallint,
    "short_description" character varying,
    "description" character varying,
    "created_at" timestamp with time zone DEFAULT "now"(),
    "input_output" "jsonb",
    "name" "text",
    "id" "uuid" DEFAULT "gen_random_uuid"() NOT NULL
);

ALTER TABLE "public"."challenge" OWNER TO "postgres";

CREATE TABLE "public"."exam" (
    "name" "text",
    "created_by" "text",
    "created_at" timestamp with time zone DEFAULT "now"(),
    "id" "uuid" DEFAULT "gen_random_uuid"() NOT NULL
);

ALTER TABLE "public"."exam" OWNER TO "postgres";

CREATE TABLE "public"."exam_challenge" (
    "id" bigint NOT NULL,
    "created_at" timestamp with time zone DEFAULT "now"(),
    "exam_id" "uuid" NOT NULL,
    "challenge_id" "uuid" NOT NULL
);

ALTER TABLE "public"."exam_challenge" OWNER TO "postgres";

ALTER TABLE "public"."exam_challenge" ALTER COLUMN "id" ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME "public"."exam_challenge_id_seq"
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);

CREATE TABLE "public"."language_info" (
    "id" bigint NOT NULL,
    "starter_code" "text",
    "created_at" timestamp with time zone DEFAULT "now"(),
    "language" "text",
    "test_cases" "text",
    "challenge_id" "uuid"
);

ALTER TABLE "public"."language_info" OWNER TO "postgres";

ALTER TABLE "public"."language_info" ALTER COLUMN "id" ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME "public"."language_info_id_seq"
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);

ALTER TABLE ONLY "public"."assessment"
    ADD CONSTRAINT "assessment_pkey" PRIMARY KEY ("id");

ALTER TABLE ONLY "public"."candidate"
    ADD CONSTRAINT "candidate_emailId_key" UNIQUE ("emailId");

ALTER TABLE ONLY "public"."candidate"
    ADD CONSTRAINT "candidate_id_key" UNIQUE ("id");

ALTER TABLE ONLY "public"."candidate"
    ADD CONSTRAINT "candidate_pkey" PRIMARY KEY ("id");

ALTER TABLE ONLY "public"."challenge"
    ADD CONSTRAINT "challenge_id_key" UNIQUE ("id");

ALTER TABLE ONLY "public"."challenge"
    ADD CONSTRAINT "challenge_pkey" PRIMARY KEY ("id");

ALTER TABLE ONLY "public"."exam_challenge"
    ADD CONSTRAINT "exam_challenge_pkey" PRIMARY KEY ("id", "exam_id", "challenge_id");

ALTER TABLE ONLY "public"."exam"
    ADD CONSTRAINT "exam_id_key" UNIQUE ("id");

ALTER TABLE ONLY "public"."exam"
    ADD CONSTRAINT "exam_pkey" PRIMARY KEY ("id");

ALTER TABLE ONLY "public"."language_info"
    ADD CONSTRAINT "language_info_pkey" PRIMARY KEY ("id");

ALTER TABLE ONLY "public"."assessment"
    ADD CONSTRAINT "assessment_candidate_id_fkey" FOREIGN KEY ("candidate_id") REFERENCES "public"."candidate"("id");

ALTER TABLE ONLY "public"."assessment"
    ADD CONSTRAINT "assessment_challenge_id_fkey" FOREIGN KEY ("challenge_id") REFERENCES "public"."challenge"("id");

ALTER TABLE ONLY "public"."assessment"
    ADD CONSTRAINT "assessment_exam_id_fkey" FOREIGN KEY ("exam_id") REFERENCES "public"."exam"("id");

ALTER TABLE ONLY "public"."exam_challenge"
    ADD CONSTRAINT "exam_challenge_challenge_id_fkey" FOREIGN KEY ("challenge_id") REFERENCES "public"."challenge"("id");

ALTER TABLE ONLY "public"."exam_challenge"
    ADD CONSTRAINT "exam_challenge_exam_id_fkey" FOREIGN KEY ("exam_id") REFERENCES "public"."exam"("id");

ALTER TABLE ONLY "public"."language_info"
    ADD CONSTRAINT "language_info_challenge_id_fkey" FOREIGN KEY ("challenge_id") REFERENCES "public"."challenge"("id");

CREATE POLICY "Authenticated" ON "public"."assessment" TO "authenticated" USING (true);

CREATE POLICY "Authenticated" ON "public"."candidate" TO "authenticated" USING (true);

CREATE POLICY "Authenticated" ON "public"."challenge" TO "authenticated" USING (true);

CREATE POLICY "Authenticated" ON "public"."exam" TO "authenticated" USING (true);

CREATE POLICY "Authenticated" ON "public"."exam_challenge" TO "authenticated" USING (true);

CREATE POLICY "Authenticated" ON "public"."language_info" TO "authenticated" USING (true);

ALTER TABLE "public"."assessment" ENABLE ROW LEVEL SECURITY;

ALTER TABLE "public"."candidate" ENABLE ROW LEVEL SECURITY;

ALTER TABLE "public"."challenge" ENABLE ROW LEVEL SECURITY;

ALTER TABLE "public"."exam" ENABLE ROW LEVEL SECURITY;

ALTER TABLE "public"."exam_challenge" ENABLE ROW LEVEL SECURITY;

ALTER TABLE "public"."language_info" ENABLE ROW LEVEL SECURITY;

GRANT USAGE ON SCHEMA "public" TO "postgres";
GRANT USAGE ON SCHEMA "public" TO "anon";
GRANT USAGE ON SCHEMA "public" TO "authenticated";
GRANT USAGE ON SCHEMA "public" TO "service_role";

GRANT ALL ON TABLE "public"."assessment" TO "anon";
GRANT ALL ON TABLE "public"."assessment" TO "authenticated";
GRANT ALL ON TABLE "public"."assessment" TO "service_role";

GRANT ALL ON SEQUENCE "public"."assessment_id_seq" TO "anon";
GRANT ALL ON SEQUENCE "public"."assessment_id_seq" TO "authenticated";
GRANT ALL ON SEQUENCE "public"."assessment_id_seq" TO "service_role";

GRANT ALL ON TABLE "public"."candidate" TO "anon";
GRANT ALL ON TABLE "public"."candidate" TO "authenticated";
GRANT ALL ON TABLE "public"."candidate" TO "service_role";

GRANT ALL ON TABLE "public"."challenge" TO "anon";
GRANT ALL ON TABLE "public"."challenge" TO "authenticated";
GRANT ALL ON TABLE "public"."challenge" TO "service_role";

GRANT ALL ON TABLE "public"."exam" TO "anon";
GRANT ALL ON TABLE "public"."exam" TO "authenticated";
GRANT ALL ON TABLE "public"."exam" TO "service_role";

GRANT ALL ON TABLE "public"."exam_challenge" TO "anon";
GRANT ALL ON TABLE "public"."exam_challenge" TO "authenticated";
GRANT ALL ON TABLE "public"."exam_challenge" TO "service_role";

GRANT ALL ON SEQUENCE "public"."exam_challenge_id_seq" TO "anon";
GRANT ALL ON SEQUENCE "public"."exam_challenge_id_seq" TO "authenticated";
GRANT ALL ON SEQUENCE "public"."exam_challenge_id_seq" TO "service_role";

GRANT ALL ON TABLE "public"."language_info" TO "anon";
GRANT ALL ON TABLE "public"."language_info" TO "authenticated";
GRANT ALL ON TABLE "public"."language_info" TO "service_role";

GRANT ALL ON SEQUENCE "public"."language_info_id_seq" TO "anon";
GRANT ALL ON SEQUENCE "public"."language_info_id_seq" TO "authenticated";
GRANT ALL ON SEQUENCE "public"."language_info_id_seq" TO "service_role";

ALTER DEFAULT PRIVILEGES FOR ROLE "postgres" IN SCHEMA "public" GRANT ALL ON SEQUENCES  TO "postgres";
ALTER DEFAULT PRIVILEGES FOR ROLE "postgres" IN SCHEMA "public" GRANT ALL ON SEQUENCES  TO "anon";
ALTER DEFAULT PRIVILEGES FOR ROLE "postgres" IN SCHEMA "public" GRANT ALL ON SEQUENCES  TO "authenticated";
ALTER DEFAULT PRIVILEGES FOR ROLE "postgres" IN SCHEMA "public" GRANT ALL ON SEQUENCES  TO "service_role";

ALTER DEFAULT PRIVILEGES FOR ROLE "postgres" IN SCHEMA "public" GRANT ALL ON FUNCTIONS  TO "postgres";
ALTER DEFAULT PRIVILEGES FOR ROLE "postgres" IN SCHEMA "public" GRANT ALL ON FUNCTIONS  TO "anon";
ALTER DEFAULT PRIVILEGES FOR ROLE "postgres" IN SCHEMA "public" GRANT ALL ON FUNCTIONS  TO "authenticated";
ALTER DEFAULT PRIVILEGES FOR ROLE "postgres" IN SCHEMA "public" GRANT ALL ON FUNCTIONS  TO "service_role";

ALTER DEFAULT PRIVILEGES FOR ROLE "postgres" IN SCHEMA "public" GRANT ALL ON TABLES  TO "postgres";
ALTER DEFAULT PRIVILEGES FOR ROLE "postgres" IN SCHEMA "public" GRANT ALL ON TABLES  TO "anon";
ALTER DEFAULT PRIVILEGES FOR ROLE "postgres" IN SCHEMA "public" GRANT ALL ON TABLES  TO "authenticated";
ALTER DEFAULT PRIVILEGES FOR ROLE "postgres" IN SCHEMA "public" GRANT ALL ON TABLES  TO "service_role";

RESET ALL;
